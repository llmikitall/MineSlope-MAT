from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram import F

from aiogram import Router

from Filters.PrivateChatFilter import PrivateChatFilter
from Structures.MenuNavigator import OutputClaimToPlayerMenu
from Filters.StatusFilter import StatusFilter
from Structures.ClaimToPlayerMenu import router as claim_to_player_router

router = Router()
router.include_routers(claim_to_player_router)


@router.message(StatusFilter(1), F.text.contains("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É"))
async def SendMessageClaim(message: Message):
    from SQLite.UpdateValues import UpdateValue
    UpdateValue(message.from_user.id, "users", "status", 2)
    await OutputClaimToPlayerMenu(message)


async def OutputMainMenu(message: Message):

    from SQLite.SelectValues import FindAnyRowUsers
    if FindAnyRowUsers(message.from_user.id, "oMainMenu") == 0:
        sep = "-------------------------------------------------------\n"
        text = ("<b>[–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!]</b>\n"
        "   –Ø - –ú–∏–Ω–µ—Å–ª–æ–ø–∏–∫. –ü–æ–º–æ–≥–∞—é –∏–≥—Ä–æ–∫–∞–º, —É–ø—Ä–æ—â–∞—è —Ä–∞–±–æ—Ç—É –Ω–∞—à–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏"
        " –∏ –∏–≥—Ä–æ–∫–∞–º! –£–º–µ—é –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–æ–ª—å–∫–æ —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –∂–∞–ª–æ–±—ã...\n"
        "   <i>–ü—Ä–æ—à—É, –Ω–µ –±—É–¥—å—Ç–µ –∫–æ –º–Ω–µ —Å—Ç—Ä–æ–≥–∏!</i>\n")
        await message.answer(sep + text + sep)
        from SQLite.UpdateValues import UpdateValue
        UpdateValue(message.from_user.id, "users", "oMainMenu", 1)

    kb = [
        [KeyboardButton(text="üö® [–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É]")]
    ]
    placeholder = "–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ:"
    Keys = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, input_field_placeholder=placeholder)
    await message.answer("<b>[–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é]</b>", reply_markup=Keys)

